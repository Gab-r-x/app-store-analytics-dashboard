"""add search vector to apps

Revision ID: f54a129045db
Revises: e93d70ba43e6
Create Date: 2025-03-23 22:03:51.103109

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f54a129045db'
down_revision: Union[str, None] = 'e93d70ba43e6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('apps', sa.Column('search_vector', postgresql.TSVECTOR(), nullable=True))
    # ### end Alembic commands ###
    
    # Create index
    op.execute("CREATE INDEX apps_search_vector_idx ON apps USING GIN (search_vector)")

    # Create trigger to auto-update vector
    op.execute("""
        CREATE FUNCTION update_search_vector() RETURNS trigger AS $$
        BEGIN
            NEW.search_vector :=
                to_tsvector('english',
                    coalesce(NEW.name, '') || ' ' ||
                    coalesce(NEW.subtitle, '') || ' ' ||
                    coalesce(NEW.developer, '') || ' ' ||
                    coalesce(NEW.description, '') || ' ' ||
                    array_to_string(NEW.labels, ' ')
                );
            RETURN NEW;
        END
        $$ LANGUAGE plpgsql;
    """)

    op.execute("""
        CREATE TRIGGER tsvectorupdate BEFORE INSERT OR UPDATE
        ON apps FOR EACH ROW EXECUTE FUNCTION update_search_vector();
    """)


def downgrade() -> None:
    """Downgrade schema."""
    op.execute("DROP TRIGGER tsvectorupdate ON apps")
    op.execute("DROP FUNCTION update_search_vector")
    op.execute("DROP INDEX apps_search_vector_idx")

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('apps', 'search_vector')
    # ### end Alembic commands ###
    