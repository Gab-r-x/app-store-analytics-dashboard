from sqlalchemy import Column, String, Integer, Float, Text, Date, JSON, ARRAY
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.ext.declarative import declarative_base
import uuid

Base = declarative_base()

class App(Base):
    __tablename__ = "apps"

    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)

    # Basic info
    apple_id = Column(String, unique=True, index=True)
    name = Column(String)
    subtitle = Column(String)
    developer = Column(String)
    url = Column(String)
    icon_url = Column(String)

    # Rank info
    rank = Column(Integer)
    category_rank = Column(String)
    category = Column(String)
    list_type = Column(String)

    # Pricing & monetization
    price = Column(String)
    has_in_app_purchases = Column(String)  # e.g., Yes, No
    monthly_revenue_estimate = Column(Float)
    monthly_downloads_estimate = Column(Float)

    # Description & visuals
    description = Column(Text)
    screenshots = Column(ARRAY(String))
    num_screenshots = Column(Integer)

    # Ratings
    rating_summary = Column(String)

    # Versions
    latest_version = Column(String)
    latest_version_date = Column(Date)

    # Labels / tags generated by AI
    labels = Column(ARRAY(String))

    # Reviews (optional - can be stored in another table if too large)
    reviews = Column(JSON)

    # Privacy & technical info
    privacy_data = Column(ARRAY(String))
    general_info = Column(JSON)

    def __repr__(self):
        return f"<App(name={self.name}, developer={self.developer}, rank={self.rank})>"
